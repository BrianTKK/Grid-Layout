* {
	margin: 0;
	padding: 0;
	text-decoration: none;
	font-family: 'Poppins', sans-serif;
}

body {
	display: flex;
	flex-direction: column;
	min-height: 100vh; /* Garante que o body ocupe a altura total da viewport */
	margin: 0; /* Remove margens padrão */
}

h2 {
	text-align: center;
}

.container {
	margin: 1rem 0;
	width: 99%;
}

.box {
	border: 1px solid #000000;
	background-color: #b1b1b1;
	text-align: center;
	padding: 0.5rem;
}

.grid-container {
	display: grid;
} /* Define o layout da grid (como se fosse uma tabela) */

.ex-01 {
	grid-template-columns: 3rem 8rem 5rem 4rem;
} /*Define o tamanho das colunas da grid*/

.ex-02 {
	grid-template-columns: 10% 30% 40% 20%;
} /*Define o tamanho das colunas da grid em porcentagem*/

.ex-03 {
	grid-template-columns: 1fr 3fr 5fr 2fr;
} /*Define o tamanho das colunas da grid em frações, usando como base o menor elemento*/

.ex-04 {
	grid-template-columns: repeat(3, 1fr) 100px;
} /*Define o tamanho das colunas da grid em frações, deixando os três primeiroes elementos com uma fração (tamanhos iguais) e o ultimo com 100px*/

.ex-05 {
	grid-template-columns: minmax(100px, 1fr) 2fr 3fr 1fr;
} /*Define o tamanho da primeira coluna com minimo de 100px e maximo de 1fr*/

.ex-06 {
	grid-template-columns: repeat(4, minmax(100px, 200px));
} /*Define o tamanho minimo das colunas em 100px e maximo de 200px*/

.ex-07 {
	grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
} /*Define automaticamente o numero de colunas que cabem no espaço disponivel respeitando o tamanho minimo e maximo*/

.ex-08 {
	grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
} /*Semelhante ao ex-07 mas ele não se esforça para alcançar o tamanho maximo definido*/

.ex-09 {
	grid-template-rows: 3rem 8rem 5rem 4rem;
} /* Grid para linhas */

.container1 {
	height: 95vh;
	padding: 2rem;
	display: grid;
	grid-template-columns: repeat(3, 200px);
	grid-template-rows: repeat(3, 100px);

	column-gap: 30px;
	row-gap: 50px;
	/* O gap tambem pode ser definido somente com gap: 30px 50px;*/

	/* Alinhamento horizontal - eixo X */
	justify-content: end; /*Vale também testar start, center, space-between, space-around e space-evenly*/
	
	/* Alinhamento vertical - eixo y */
	align-content: center;

	/* Alinhamento do conteudo da grid */
	justify-items: start; /*Vale também testar end, center, stretch e baseline*/
	align-items: center; /*Vale também testar start, end, center, stretch e baseline*/

	
}

/* Com justify-self e align-self podemos alinhar os elementos individualmente em uma classe separada por exemplo */